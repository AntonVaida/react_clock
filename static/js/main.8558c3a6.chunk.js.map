{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timeId","setNewDate","setState","this","window","setInterval","prevProps","console","info","toUTCString","slice","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","clockName","hasClock","nameId","setNewName","hiddenClock","event","preventDefault","makeClockVisible","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,OAAS,EALX,EAwBEC,WAAa,WACX,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,QAzB9B,uDAOE,WACEI,KAAKH,OAASI,OAAOC,YAAYF,KAAKF,WAAY,OARtD,gCAWE,SAAmBK,GAEjBC,QAAQC,KAAKL,KAAKN,MAAMC,KAAKW,cAAcC,OAAO,IAAK,IACnDJ,EAAUK,OAASR,KAAKS,MAAMD,MAEhCJ,QAAQM,MAAR,uBAA8BP,EAAUK,KAAxC,eAAmDR,KAAKS,MAAMD,SAhBpE,kCAoBE,WACEP,OAAOU,cAAcX,KAAKH,UArB9B,oBA4BE,WACE,IAAQW,EAASR,KAAKS,MAAdD,KACAb,EAASK,KAAKN,MAAdC,KAER,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGjB,EAAKW,cAAcC,OAAO,IAAK,YAzC1C,GAA2BM,aCN3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAQX,IAAMG,EAAb,4MACExB,MAAQ,CACNyB,UAAW,UACXC,UAAU,GAHd,EAMEC,OAAS,EANX,EAoBEC,WAAa,WACX,EAAKvB,SAAS,CAAEoB,UAAWL,OArB/B,EAwBES,YAAc,SAACC,GACbA,EAAMC,iBACN,EAAK1B,SAAS,CAAEqB,UAAU,KA1B9B,EA6BEM,iBAAmB,WACjB,EAAK3B,SAAS,CAAEqB,UAAU,KA9B9B,uDAQE,WACEO,SAASC,iBAAiB,cAAe5B,KAAKuB,aAC9CI,SAASC,iBAAiB,QAAS5B,KAAK0B,kBACxC1B,KAAKqB,OAASpB,OAAOC,YAAYF,KAAKsB,WAAY,QAXtD,kCAcE,WACEK,SAASC,iBAAiB,cAAe5B,KAAKuB,aAC9CI,SAASC,iBAAiB,QAAS5B,KAAK0B,kBACxCzB,OAAOU,cAAcX,KAAKqB,UAjB9B,oBAiCE,WACE,MAAgCrB,KAAKN,MAA7ByB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCQ,GACC,cAAC,EAAD,CAAOZ,KAAMW,WAxCvB,GAAyBN,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.8558c3a6.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Prop = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Prop, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timeId = 0;\n\n  componentDidMount() {\n    this.timeId = window.setInterval(this.setNewDate, 1000);\n  }\n\n  componentDidUpdate(prevProps:Prop) {\n    // eslint-disable-next-line no-console\n    console.info(this.state.date.toUTCString().slice(-12, -4));\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timeId);\n  }\n\n  setNewDate = ():void => {\n    this.setState({ date: new Date() });\n  };\n\n  render() {\n    const { name } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/index';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  nameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hiddenClock);\n    document.addEventListener('click', this.makeClockVisible);\n    this.nameId = window.setInterval(this.setNewName, 3300);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('contextmenu', this.hiddenClock);\n    document.addEventListener('click', this.makeClockVisible);\n    window.clearInterval(this.nameId);\n  }\n\n  setNewName = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  hiddenClock = (event:any) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  makeClockVisible = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}